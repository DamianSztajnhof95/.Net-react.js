[{"D:\\react\\my-app\\src\\index.tsx":"1","D:\\react\\my-app\\src\\reportWebVitals.ts":"2","D:\\react\\my-app\\src\\App.tsx":"3","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\index.tsx":"4","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\reportWebVitals.ts":"5","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\layout\\App.tsx":"6","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\nav\\NavBar.tsx":"7","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"8","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\dashboard\\ActivityList.tsx":"9","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\Details\\ActivityDetails.tsx":"10","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\form\\ActivityForm.tsx":"11","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\api\\agent.ts":"12","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\layout\\LoadingComponent.tsx":"13","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\ActivityStore.ts":"14","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\Home\\HomePage.tsx":"15","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\layout\\ScrollToTop.tsx":"16","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"17","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\Details\\ActivityDetailedHeader.tsx":"18","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\Details\\ActivityDetailedSidebar.tsx":"19","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\Details\\ActivityDetailedChat.tsx":"20","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\Details\\ActivityDetailedInfo.tsx":"21","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\layout\\NotFound.tsx":"22","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Form\\TextInput.tsx":"23","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Form\\TextAreaInput.tsx":"24","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Form\\SelectInput.tsx":"25","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Options\\CategoryOptions.ts":"26","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Form\\DateInput.tsx":"27","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\util\\util.ts":"28","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\models\\activity.ts":"29","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\rootStore.ts":"30","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\userStore.ts":"31","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\user\\LoginForm.tsx":"32","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\commonStore.ts":"33","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\ModalStore.ts":"34","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\modals\\ModalContainer.tsx":"35","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Form\\ErrorMessage.tsx":"36","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\user\\RegisterForm.tsx":"37","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\dashboard\\ActivityListItemAttendees.tsx":"38","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\profiles\\ProfilePage.tsx":"39","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\profiles\\ProfileHeader.tsx":"40","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\profiles\\ProfileContent.tsx":"41","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\profileStore.ts":"42","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\profiles\\ProfilePhotos.tsx":"43","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\photoUpload\\PhotoUploadWidgets.tsx":"44","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\photoUpload\\PhotoWidgetDropzone.tsx":"45"},{"size":500,"mtime":499162500000,"results":"46","hashOfConfig":"47"},{"size":425,"mtime":499162500000,"results":"48","hashOfConfig":"47"},{"size":556,"mtime":499162500000,"results":"49","hashOfConfig":"47"},{"size":996,"mtime":1612810188733,"results":"50","hashOfConfig":"51"},{"size":440,"mtime":1611264633010,"results":"52","hashOfConfig":"51"},{"size":2742,"mtime":1614193231813,"results":"53","hashOfConfig":"51"},{"size":1976,"mtime":1614192878398,"results":"54","hashOfConfig":"51"},{"size":998,"mtime":1613566846622,"results":"55","hashOfConfig":"51"},{"size":1110,"mtime":1613575916322,"results":"56","hashOfConfig":"51"},{"size":1635,"mtime":1613676984155,"results":"57","hashOfConfig":"51"},{"size":6692,"mtime":1613567914673,"results":"58","hashOfConfig":"51"},{"size":2732,"mtime":1614195442557,"results":"59","hashOfConfig":"51"},{"size":390,"mtime":1614197431690,"results":"60","hashOfConfig":"51"},{"size":6847,"mtime":1614084872827,"results":"61","hashOfConfig":"51"},{"size":2055,"mtime":1613582116184,"results":"62","hashOfConfig":"51"},{"size":295,"mtime":1612640440313,"results":"63","hashOfConfig":"51"},{"size":2764,"mtime":1614193512180,"results":"64","hashOfConfig":"51"},{"size":2733,"mtime":1614193529323,"results":"65","hashOfConfig":"51"},{"size":2058,"mtime":1614084807851,"results":"66","hashOfConfig":"51"},{"size":2419,"mtime":1612704299006,"results":"67","hashOfConfig":"51"},{"size":1785,"mtime":1612810886698,"results":"68","hashOfConfig":"51"},{"size":627,"mtime":1612715037294,"results":"69","hashOfConfig":"51"},{"size":747,"mtime":1612728084379,"results":"70","hashOfConfig":"51"},{"size":743,"mtime":1612728561051,"results":"71","hashOfConfig":"51"},{"size":892,"mtime":1612728843232,"results":"72","hashOfConfig":"51"},{"size":351,"mtime":1612728934128,"results":"73","hashOfConfig":"51"},{"size":1180,"mtime":1612812614388,"results":"74","hashOfConfig":"51"},{"size":1048,"mtime":1614082940223,"results":"75","hashOfConfig":"51"},{"size":936,"mtime":1613678121438,"results":"76","hashOfConfig":"51"},{"size":783,"mtime":1614195620587,"results":"77","hashOfConfig":"51"},{"size":1739,"mtime":1613581895282,"results":"78","hashOfConfig":"51"},{"size":2438,"mtime":1613583451595,"results":"79","hashOfConfig":"51"},{"size":947,"mtime":1613577020246,"results":"80","hashOfConfig":"51"},{"size":511,"mtime":1613580800119,"results":"81","hashOfConfig":"51"},{"size":509,"mtime":1613580427048,"results":"82","hashOfConfig":"51"},{"size":813,"mtime":1613583207014,"results":"83","hashOfConfig":"51"},{"size":2830,"mtime":1614084924948,"results":"84","hashOfConfig":"51"},{"size":902,"mtime":1613676780820,"results":"85","hashOfConfig":"51"},{"size":1158,"mtime":1614197553892,"results":"86","hashOfConfig":"51"},{"size":2229,"mtime":1614196575945,"results":"87","hashOfConfig":"51"},{"size":793,"mtime":1614200980711,"results":"88","hashOfConfig":"51"},{"size":1187,"mtime":1614198670145,"results":"89","hashOfConfig":"51"},{"size":1992,"mtime":1614201340091,"results":"90","hashOfConfig":"51"},{"size":1308,"mtime":1614205539279,"results":"91","hashOfConfig":"51"},{"size":1178,"mtime":1614205384568,"results":"92","hashOfConfig":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qmpwpo",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"1cil6v9",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"101"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"101"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"101"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\my-app\\src\\index.tsx",[],"D:\\react\\my-app\\src\\reportWebVitals.ts",[],"D:\\react\\my-app\\src\\App.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\index.tsx",[],["188","189"],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\reportWebVitals.ts",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\layout\\App.tsx",["190"],"import React, {Fragment, useContext, useEffect } from 'react';\r\nimport { Container } from 'semantic-ui-react'\r\nimport NavBar from '../../features/nav/NavBar';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Route, RouteComponentProps, withRouter } from 'react-router';\r\nimport HomePage from '../../features/Home/HomePage';\r\nimport ActivityForm from '../../features/activities/form/ActivityForm';\r\nimport ActivityDetails from '../../features/activities/Details/ActivityDetails';\r\nimport NotFound from './NotFound';\r\nimport { Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport LoginForm from '../../features/user/LoginForm';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport ModalContainer from '../Common/modals/ModalContainer';\r\nimport ProfilePage from '../../features/profiles/ProfilePage';\r\n\r\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const { setAppLoaded, token,appLoaded } = rootStore.commonStore;\r\n    const { getUser } = rootStore.userStore;\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            getUser().finally(() => setAppLoaded())\r\n        } else {\r\n            setAppLoaded()\r\n        }\r\n    }, [getUser, setAppLoaded, token])\r\n    if (!appLoaded) return <LoadingComponent content='Loading..app'/>\r\n    return (\r\n        <Fragment >\r\n            <ModalContainer/>\r\n            <ToastContainer position ='bottom-right'/>\r\n            <Route exact path='/' component={HomePage} />\r\n            <Route path={'/(.+)'} render={() => (\r\n                <Fragment>\r\n                    <NavBar />\r\n                    <Container style={{ marginTop: '7em' }}>\r\n                        <Switch>\r\n                            <Route exact path='/activities'\r\n                                component={ActivityDashboard} />\r\n                            <Route path='/activities/:id'\r\n                                component={ActivityDetails} />\r\n                            <Route key={location.key}\r\n                                path={['/createActivity', '/manage/:id']}\r\n                                component={ActivityForm} />\r\n                            <Route path='/profile/:username' component={ProfilePage} />\r\n                            <Route component={NotFound} />\r\n                        </Switch>                    \r\n                    </Container>\r\n                </Fragment>             \r\n                )} />                          \r\n        </Fragment>\r\n        );    \r\n}\r\n\r\nexport default withRouter(observer(App));\r\n","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\nav\\NavBar.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\Details\\ActivityDetails.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\form\\ActivityForm.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\api\\agent.ts",["191"],"import axios, { AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { IActivity } from '../models/activity';\r\nimport { IProfile } from '../models/profile';\r\nimport { IUser, IUserFormValues } from '../models/user';\r\n\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\naxios.interceptors.request.use((config) => {\r\n    const token = window.localStorage.getItem('jwt');\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config\r\n\r\n}, error => {\r\n        return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n    \r\n    if (error.message === 'Network Error' && !error.response) {\r\n        toast.error('serwer nie dzia�a');\r\n    }\r\n    const { status,data,config } = error.response;\r\n    if (status === 404) {\r\n        history.push('/notfound');\r\n    }\r\n    if (status === 400 && config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n        history.push('/notfound')\r\n    }\r\n    if (status === 500) {\r\n        toast.error('server error - check the terminal for more info');\r\n    }\r\n    throw error.response;\r\n    \r\n})\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst request = {\r\n    get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody)\r\n}\r\n\r\nconst Activities = {\r\n    list: (): Promise<IActivity[]> => request.get('/activities'),\r\n    details: (id: string) => request.get(`/activities/${id}`),\r\n    create:(activity: IActivity)=> request.post('/activities', activity),\r\n    update: (activity: IActivity) => request.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => request.del(`/activities/${id}`),\r\n    attend: (id: string) => request.post(`/activities/${id}/attend`, {}),\r\n    unattend: (id: string) => request.del(`/activities/${id}/attend`)\r\n\r\n}\r\n\r\nconst User = {\r\n    current: (): Promise<IUser> => request.get('/user'),\r\n    login: (user: IUserFormValues): Promise<IUser> => request.post('/user/login', user),\r\n    register: (user: IUserFormValues): Promise<IUser> => request.post('/user/register', user),\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string): Promise<IProfile> =>request.get(`/profiles/${username}`)\r\n}\r\n\r\nexport default {\r\n    Activities,\r\n    User,\r\n    Profiles\r\n}\r\n","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\layout\\LoadingComponent.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\ActivityStore.ts",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\Home\\HomePage.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\layout\\ScrollToTop.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\Details\\ActivityDetailedHeader.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\Details\\ActivityDetailedSidebar.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\Details\\ActivityDetailedChat.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\Details\\ActivityDetailedInfo.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\layout\\NotFound.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Form\\TextInput.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Form\\TextAreaInput.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Form\\SelectInput.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Options\\CategoryOptions.ts",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Form\\DateInput.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\util\\util.ts",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\models\\activity.ts",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\rootStore.ts",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\userStore.ts",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\user\\LoginForm.tsx",["192","193"],"import { FORM_ERROR } from 'final-form'\r\nimport React, { useContext } from 'react'\r\nimport { Form as FinalForm, Field } from 'react-final-form'\r\nimport { combineValidators, isRequired } from 'revalidate'\r\nimport { Button, Form, Header } from 'semantic-ui-react'\r\nimport ErrorMessage from '../../app/Common/Form/ErrorMessage'\r\nimport TextInput from '../../app/Common/Form/TextInput'\r\nimport { IUserFormValues } from '../../app/models/user'\r\nimport { RootStoreContext } from '../../app/stores/rootStore'\r\n\r\nconst validate = combineValidators({\r\n    email: isRequired('email'),\r\n    password:isRequired('password')\r\n})\r\n\r\nconst LoginForm = () => {\r\n    const rootStore = useContext(RootStoreContext)\r\n    const { login } = rootStore.userStore;\r\n    return (\r\n        <FinalForm\r\n            onSubmit={(values: IUserFormValues) => login(values).catch(error => ({\r\n                [FORM_ERROR]:error\r\n            }))}\r\n            validate={validate}\r\n            render={({\r\n                handleSubmit,\r\n                submitting,\r\n                submitError,\r\n                invalid,\r\n                dirtySinceLastSubmit,\r\n                pristine }) => (\r\n                <Form onSubmit={handleSubmit} error>\r\n                    <Header\r\n                        as='h2'\r\n                        content='Login to Reactivities'\r\n                        color='teal'\r\n                        textAlign='center'\r\n                        />\r\n                    <Field name='email'\r\n                        component={TextInput}\r\n                        placeholder='Email'\r\n                    />\r\n                    <Field name='password'\r\n                        component={TextInput}\r\n                        placeholder='Password'\r\n                        type='password'\r\n                    />\r\n                    {submitError && !dirtySinceLastSubmit && (\r\n                        <ErrorMessage\r\n                            error={submitError}\r\n                            text='Invalid email or password'/>\r\n                        )}\r\n                    <Button\r\n                        disabled={invalid && !dirtySinceLastSubmit ||  pristine}\r\n                        loading={submitting}\r\n                        color='teal'\r\n                        content='Login'\r\n                        fluid\r\n                    />\r\n                </Form>\r\n                )}\r\n        />\r\n\r\n        )\r\n}\r\n\r\nexport default LoginForm","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\commonStore.ts",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\ModalStore.ts",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\modals\\ModalContainer.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\Form\\ErrorMessage.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\user\\RegisterForm.tsx",["194","195"],"import { FORM_ERROR } from 'final-form'\r\nimport React, { useContext } from 'react'\r\nimport { Form as FinalForm, Field } from 'react-final-form'\r\nimport { combineValidators, isRequired } from 'revalidate'\r\nimport { Button, Form, Header } from 'semantic-ui-react'\r\nimport ErrorMessage from '../../app/Common/Form/ErrorMessage'\r\nimport TextInput from '../../app/Common/Form/TextInput'\r\nimport { IUserFormValues } from '../../app/models/user'\r\nimport { RootStoreContext } from '../../app/stores/rootStore'\r\n\r\nconst validate = combineValidators({\r\n    username: isRequired('username'),\r\n    displayName: isRequired('display name'),\r\n    email: isRequired('email'),\r\n    password: isRequired('password')\r\n\r\n})\r\n\r\nconst RegisterForm = () => {\r\n    const rootStore = useContext(RootStoreContext)\r\n    const { register } = rootStore.userStore;\r\n    return (\r\n        <FinalForm\r\n            onSubmit={(values: IUserFormValues) => register(values).catch(error => ({\r\n                [FORM_ERROR]: error\r\n            }))}\r\n            validate={validate}\r\n            render={({\r\n                handleSubmit,\r\n                submitting,\r\n                submitError,\r\n                invalid,\r\n                dirtySinceLastSubmit,\r\n                pristine }) => (\r\n                <Form onSubmit={handleSubmit} error>\r\n                    <Header\r\n                        as='h2'\r\n                        content='Register to Reactivities'\r\n                        color='teal'\r\n                        textAlign='center'\r\n                    />\r\n                    <Field name='username'\r\n                        component={TextInput}\r\n                        placeholder='Username'\r\n                    />\r\n                    <Field name='displayName'\r\n                        component={TextInput}\r\n                        placeholder='Display Name'\r\n                    />\r\n                    <Field name='email'\r\n                        component={TextInput}\r\n                        placeholder='Email'\r\n                    />\r\n                    <Field name='password'\r\n                        component={TextInput}\r\n                        placeholder='Password'\r\n                        type='password'\r\n                    />\r\n                    {submitError && !dirtySinceLastSubmit && (\r\n                        <ErrorMessage\r\n                            error={submitError}\r\n                             />\r\n                    )}\r\n                    <Button\r\n                        disabled={invalid && !dirtySinceLastSubmit || pristine}\r\n                        loading={submitting}\r\n                        color='teal'\r\n                        content='Register'\r\n                        fluid\r\n                    />\r\n                </Form>\r\n            )}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default RegisterForm","E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\activities\\dashboard\\ActivityListItemAttendees.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\profiles\\ProfilePage.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\profiles\\ProfileHeader.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\profiles\\ProfileContent.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\stores\\profileStore.ts",["196"],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\features\\profiles\\ProfilePhotos.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\photoUpload\\PhotoUploadWidgets.tsx",[],"E:\\Users\\kocuras\\source\\repos\\RambudWebsite\\client\\src\\app\\Common\\photoUpload\\PhotoWidgetDropzone.tsx",["197"],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":72,"column":1,"nodeType":"208","endLine":76,"endColumn":2},{"ruleId":"209","severity":1,"message":"210","line":54,"column":43,"nodeType":"211","messageId":"212","endLine":54,"endColumn":45},{"ruleId":"209","severity":1,"message":"210","line":54,"column":68,"nodeType":"211","messageId":"212","endLine":54,"endColumn":70},{"ruleId":"209","severity":1,"message":"210","line":65,"column":43,"nodeType":"211","messageId":"212","endLine":65,"endColumn":45},{"ruleId":"209","severity":1,"message":"210","line":65,"column":68,"nodeType":"211","messageId":"212","endLine":65,"endColumn":70},{"ruleId":"202","severity":1,"message":"213","line":1,"column":40,"nodeType":"204","messageId":"205","endLine":1,"endColumn":50},{"ruleId":"214","severity":1,"message":"215","line":27,"column":8,"nodeType":"216","endLine":27,"endColumn":10,"suggestions":"217"},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"@typescript-eslint/no-unused-vars","'LoginForm' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'observable' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setFiles'. Either include it or remove the dependency array. If 'setFiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["220"],"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},"Update the dependencies array to be: [setFiles]",{"range":"223","text":"224"},[719,721],"[setFiles]"]